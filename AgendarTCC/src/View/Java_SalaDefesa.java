/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicius
 */
public class Java_SalaDefesa extends javax.swing.JFrame {
    private MainFrame mainFrame; // aqui recebe o mainFrame
    public Java_SalaDefesa(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
    }
private void carregarDadosTabela() {
        try (Connection conexao = ConexaoBD.obterConexao()) {
        String sql = "SELECT codigo_sala, nome_sala, local, hora, reservado, data FROM sala_defesa";
        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
            ResultSet resultSet = preparedStatement.executeQuery();

            // Limpa a tabela antes de adicionar novos dados
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            // Adiciona os dados na tabela
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getString("codigo_sala"),
                    resultSet.getString("nome_sala"),
                    resultSet.getString("local"),
                    resultSet.getString("hora"),
                    resultSet.getString("reservado"),
                    resultSet.getString("data"),
                };
                model.addRow(row);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        Mensagens.exibirMensagemErro(this, "erro");
    }
     }
    
    
    
    
    
    
    
    private DefaultTableModel model; // Adicione esta linha


    /**
     * Creates new form Java_SalaDefesa
     */
    public Java_SalaDefesa() {
        initComponents();
        carregarDadosTabela(); // Adicione esta linha para carregar os dados inicialmente
        
        // iniciar modelo tabela 
        model = new DefaultTableModel();
        jTable1.setModel(model);
        model.addColumn("Código Sala");
        model.addColumn("Nome da Sala");
        model.addColumn("Local");
        model.addColumn("Hora de Início");
        model.addColumn("Reservado");
        model.addColumn("Data");
        
        // Tornar campos apenas para leitura
        jtxtCodSala.setEditable(false);
        jtxtReservado.setEditable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtxtData = new javax.swing.JTextField();
        jtxtLocal = new javax.swing.JTextField();
        jtxtHoraInicio = new javax.swing.JTextField();
        jtxtHoraTermino = new javax.swing.JTextField();
        jtxtCodSala = new javax.swing.JTextField();
        jtxtNomeSala = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxtReservado = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jbntAtt = new javax.swing.JButton();
        jbntListar = new javax.swing.JButton();
        jbtnCadastrar = new javax.swing.JButton();
        jbntSair = new javax.swing.JButton();
        jbntReset = new javax.swing.JButton();
        jbntDeletar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendar Sala de Defesa");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Código da Sala");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Nome Sala");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons 1/building.png"))); // NOI18N
        jLabel4.setText("Local");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons 1/calendar.png"))); // NOI18N
        jLabel5.setText("Data");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons 1/time.png"))); // NOI18N
        jLabel6.setText("Hora de Início");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Hora de Término");

        jtxtData.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jtxtLocal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jtxtHoraInicio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jtxtHoraTermino.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtxtHoraTermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtHoraTerminoActionPerformed(evt);
            }
        });

        jtxtCodSala.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtxtCodSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCodSalaActionPerformed(evt);
            }
        });

        jtxtNomeSala.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Reservado");

        jtxtReservado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtxtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtxtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtxtHoraTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtCodSala, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtNomeSala, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtReservado, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtCodSala, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtNomeSala, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jtxtHoraTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtxtReservado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7});

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jbntAtt.setBackground(new java.awt.Color(32, 91, 139));
        jbntAtt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbntAtt.setForeground(new java.awt.Color(255, 255, 255));
        jbntAtt.setText("Atualizar");
        jbntAtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntAttActionPerformed(evt);
            }
        });

        jbntListar.setBackground(new java.awt.Color(32, 91, 139));
        jbntListar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbntListar.setForeground(new java.awt.Color(255, 255, 255));
        jbntListar.setText("Listar");
        jbntListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntListarActionPerformed(evt);
            }
        });

        jbtnCadastrar.setBackground(new java.awt.Color(32, 91, 139));
        jbtnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbtnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnCadastrar.setText("Cadastrar");
        jbtnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCadastrarActionPerformed(evt);
            }
        });

        jbntSair.setBackground(new java.awt.Color(32, 91, 139));
        jbntSair.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbntSair.setForeground(new java.awt.Color(255, 255, 255));
        jbntSair.setText("Sair");
        jbntSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntSairActionPerformed(evt);
            }
        });

        jbntReset.setBackground(new java.awt.Color(32, 91, 139));
        jbntReset.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbntReset.setForeground(new java.awt.Color(255, 255, 255));
        jbntReset.setText("Resetar");
        jbntReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntResetActionPerformed(evt);
            }
        });

        jbntDeletar.setBackground(new java.awt.Color(32, 91, 139));
        jbntDeletar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbntDeletar.setForeground(new java.awt.Color(255, 255, 255));
        jbntDeletar.setText("Deletar");
        jbntDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbntSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbntDeletar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbntReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbntListar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbntAtt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbtnCadastrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntAtt, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntListar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntReset, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntSair, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Sala", "Nome da Sala", "Local", "Hora de ínicio", "Reservado", "Data"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel8.setBackground(new java.awt.Color(32, 91, 139));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/univicosa_horizontal 3.png"))); // NOI18N
        jLabel12.setText("jLabel1");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtHoraTerminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtHoraTerminoActionPerformed
        // TODO add your handling code here:
        // Colocar código para verificar se já está reservado, caso sim não deixar.
    }//GEN-LAST:event_jtxtHoraTerminoActionPerformed

    private void jtxtCodSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCodSalaActionPerformed
        // TODO add your handling code here:
        // Toda sala tem um código ou fazer no futuro um auto imcremento
    }//GEN-LAST:event_jtxtCodSalaActionPerformed

    private void jbntAttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntAttActionPerformed
         // TODO add your handling code here:
    String codigo_sala = jtxtCodSala.getText();
    String nome_sala = jtxtNomeSala.getText();
    String local = jtxtLocal.getText();
    String data = jtxtData.getText();
    String hora = jtxtHoraInicio.getText();

    // Verifique se os campos obrigatórios estão preenchidos
    if (nome_sala.isEmpty() || local.isEmpty() || hora.isEmpty() || data.isEmpty()) {
        Mensagens.exibirMensagemErro(this, "Preencha todos os campos obrigatórios");
        return;  // Não continue com a atualização se algum campo estiver vazio
    }

    try (Connection conexao = ConexaoBD.obterConexao()) {
        // Verifique se os campos já estão preenchidos antes de atualizar
        String verificaExistenciaSql = "SELECT * FROM sala_defesa WHERE nome_sala = ? AND local = ? AND hora = ? AND data = ?";
        try (PreparedStatement verificaExistenciaStatement = conexao.prepareStatement(verificaExistenciaSql)) {
            verificaExistenciaStatement.setString(1, nome_sala);
            verificaExistenciaStatement.setString(2, local);
            verificaExistenciaStatement.setString(3, hora);
            verificaExistenciaStatement.setString(4, data);

            try (ResultSet resultSet = verificaExistenciaStatement.executeQuery()) {
                if (resultSet.next()) {
                    Mensagens.exibirMensagemErro(this, "Horário já cadastrado!");
                    return;  // Não continue com a atualização se os dados já existirem
                }
            }
        }

        // Se chegou aqui, os campos estão preenchidos e os dados não existem, então prossiga com a atualização
        String sql = "UPDATE sala_defesa SET nome_sala =?, local =?, hora =?, data =? WHERE codigo_sala =?";
        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
            preparedStatement.setString(1, nome_sala);
            preparedStatement.setString(2, local);
            preparedStatement.setString(3, hora);
            preparedStatement.setString(4, data);
            preparedStatement.setString(5, codigo_sala);

            int linhasAfetadas = preparedStatement.executeUpdate();

            if (linhasAfetadas > 0) {
                Mensagens.exibirMensagemSucesso(this, "Dados atualizados com sucesso");
            } else {
                Mensagens.exibirMensagemErro(this, "Erro ao atualizar dados");
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        Mensagens.exibirMensagemErro(this, "ERROR");
    }
    }//GEN-LAST:event_jbntAttActionPerformed

    private void jbntListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntListarActionPerformed
        // Listar minha table:
        carregarDadosTabela();
    }//GEN-LAST:event_jbntListarActionPerformed

    private void jbtnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCadastrarActionPerformed
 // TODO add your handling code here:
//String codigo_sala = jtxtCodSala.getText();
String nome_sala = jtxtNomeSala.getText();
String local = jtxtLocal.getText();
String data = jtxtData.getText();
String hora = jtxtHoraInicio.getText();
String reservado = "Sim"; // Defina o valor de reservado conforme necessário

// Verifique se os campos obrigatórios estão preenchidos
if (nome_sala.isEmpty() || local.isEmpty() || hora.isEmpty() || data.isEmpty()) {
    Mensagens.exibirMensagemErro(this, "Preencha todos os campos obrigatórios");
    return;  // Não continue com a atualização se algum campo estiver vazio
}

try (Connection conexao = ConexaoBD.obterConexao()) {
    // Verifica se a sala já está reservada
    String verificaReservaSql = "SELECT * FROM sala_defesa WHERE hora = ? AND data = ?";
    try (PreparedStatement verificaReservaStmt = conexao.prepareStatement(verificaReservaSql)) {
        verificaReservaStmt.setString(1, hora);
        verificaReservaStmt.setString(2, data);

        try (ResultSet resultSet = verificaReservaStmt.executeQuery()) {
            if (resultSet.next()) {
                // A sala já está reservada, exiba uma mensagem de erro e retorne
                Mensagens.exibirMensagemErro(this, "Erro ao agendar. A sala já está reservada.");
                return; // Cancela o cadastro
            }
        }
    }

    // Se chegou aqui, a sala não está reservada, então podemos inserir a reserva
    String inserirReservaSql = "INSERT INTO sala_defesa (nome_sala, local, data, hora, reservado) VALUES (?, ?, ?, ?, ?)";
    try (PreparedStatement preparedStatement = conexao.prepareStatement(inserirReservaSql)) {
        preparedStatement.setString(1, nome_sala);
        preparedStatement.setString(2, local);

        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date dateDate = sdfDate.parse(data);
        java.sql.Date sqlDate = new java.sql.Date(dateDate.getTime());
        preparedStatement.setDate(3, sqlDate);

        SimpleDateFormat sdfTime = new SimpleDateFormat("HH:mm");
        java.util.Date dateTime = sdfTime.parse(hora);
        java.sql.Time sqlTime = new java.sql.Time(dateTime.getTime());
        preparedStatement.setTime(4, sqlTime);

        // Define explicitamente o valor de "Sim" no banco de dados
        preparedStatement.setString(5, reservado);

        int linhasAfetadas = preparedStatement.executeUpdate();

        if (linhasAfetadas > 0) {
            Mensagens.exibirMensagemSucesso(this, "Dados Inseridos com sucesso");
        } else {
            Mensagens.exibirMensagemErro(this, "Esse horário já foi reservado.");
        }
    }
} catch (SQLException | ParseException e) {
    e.printStackTrace();
    Mensagens.exibirMensagemErro(this, "ERROR");
}
    }//GEN-LAST:event_jbtnCadastrarActionPerformed

    private void jbntSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntSairActionPerformed
        // -----------SAIR --------------
        this.dispose();
        mainFrame.setVisible(true);
    }//GEN-LAST:event_jbntSairActionPerformed

    private void jbntResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntResetActionPerformed
        // ------------------Resetar---------------------------
        // Resetar o texto:
        jtxtCodSala.setText("");
        jtxtNomeSala.setText("");
        jtxtNomeSala.setText("");
        jtxtLocal.setText("");
        jtxtHoraInicio.setText("");
        jtxtHoraTermino.setText("");
        jtxtReservado.setText("");
        jtxtData.setText("");
    }//GEN-LAST:event_jbntResetActionPerformed

    private void jbntDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntDeletarActionPerformed
        // ------------- Deletar Dados-------------
        String codigo_sala = jtxtCodSala.getText();

        try (Connection conexao = ConexaoBD.obterConexao()) {
            String sql = "DELETE FROM sala_defesa WHERE codigo_sala = ?";
            try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
                preparedStatement.setString(1, codigo_sala);

                int linhasAfetadas = preparedStatement.executeUpdate();

                if (linhasAfetadas > 0) {
                    Mensagens.exibirMensagemSucesso(this, "Deletado com sucesso!");
                } else {
                    Mensagens.exibirMensagemErro(this, "Erro ao deletar");

                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            Mensagens.exibirMensagemErro(this, "Erro ao deletar");
        }
    }//GEN-LAST:event_jbntDeletarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            System.out.println("Selected Row: " + selectedRow);
            System.out.println("Model Row Count: " + model.getRowCount());

        // Imprime os valores das colunas para depuração
            for (int i = 0; i < model.getColumnCount(); i++) {
                System.out.println("Column " + i + ": " + model.getValueAt(selectedRow, i));
            }

            jtxtCodSala.setText(model.getValueAt(selectedRow, 0).toString());
            jtxtNomeSala.setText(model.getValueAt(selectedRow, 1).toString());
            jtxtLocal.setText(model.getValueAt(selectedRow, 2).toString());
            jtxtHoraInicio.setText(model.getValueAt(selectedRow, 3).toString());
            jtxtReservado.setText(model.getValueAt(selectedRow, 4).toString());
            jtxtData.setText(model.getValueAt(selectedRow, 5).toString());

            
    }
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Java_SalaDefesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Java_SalaDefesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Java_SalaDefesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Java_SalaDefesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Java_SalaDefesa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbntAtt;
    private javax.swing.JButton jbntDeletar;
    private javax.swing.JButton jbntListar;
    private javax.swing.JButton jbntReset;
    private javax.swing.JButton jbntSair;
    private javax.swing.JButton jbtnCadastrar;
    private javax.swing.JTextField jtxtCodSala;
    private javax.swing.JTextField jtxtData;
    private javax.swing.JTextField jtxtHoraInicio;
    private javax.swing.JTextField jtxtHoraTermino;
    private javax.swing.JTextField jtxtLocal;
    private javax.swing.JTextField jtxtNomeSala;
    private javax.swing.JTextField jtxtReservado;
    // End of variables declaration//GEN-END:variables
}
